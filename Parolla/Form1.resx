<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="linkLabel1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EAAACxABrSO9dQAAEMtJREFUaEO92QesXlV2BeDrgaEoQpFGIwUPoyRCgEYT4gENpgWbYpveqzG992Iw
        HdM7mI5h6L3axqb3junNdNMNxqYYMM31/SfrO8p9iSdGw2gmedLRve+Wc/Zee+2197l/88EHH8x1fPTR
        R83bb7/dnHzyyc3222/f7LTTTs22227b7Lbbbs0+++zTnHnmmc2+++7b7Lnnns0ee+zRHHzwwc2WW27Z
        bLbZZs1SSy1Vn99xxx3n23333Xsedthhe1122WXD77zzzkMfffTRIa+++uqWN99886JDhgyZ7+67724u
        vvji5tprr23uu+++5t13322GDh3aHHLIIc2FF17YHHvssXWdgw46qDn99NObU089dY4xV+ONn+vAXnvt
        xYmFs+jiW2211R933XXX/ltvvfUhee6qXXbZZXTuPbnffvtN3GabbcqgQYNKzju5PmW77bZ7Lu/8KX8D
        48BvbrjhhurAe++99//jwLBhw3619957b5frI4P6W6uvvvpH66+//uQddtjh2zhV8lxxzMLl6KOPLocf
        fnjJXCVzlU033bSsttpqZZNNNulkrs8GDx789PHHH3/sAw88sMw777wz7/+pA6HFb7Pg4Pz/bBCdvsUW
        W5QgXoJ0ueiii8qYMWPKQw89VF544YXO888/33niiSdKaFNef/31zocffth5/PHHy4gRI8rw4cNFo8T5
        EufLuuuuWxLBiSeddNKFWXOtUPJXeebv7sA6Bx544JjQ5JMs/GNoUM4666wSbndefvnlzmeffdZ58803
        O6FB55NPPqnHjz/+uDNp0qRO5utkvpK5y6efflomT55c3n///ZIcKDGkHHDAAaLTtdFGG01J3rxzyimn
        DA+1Fv+LDjB0biMLVz5moia0mDeTHxaUJwf1r/r37z8zPC7XXHNNeemllwpkJ0yYUI0fN25cJzSox9de
        e60TI+vRc2PHji1PP/10NTzP1mOStjz33HPljjvuKKNGjSrnn3++aMwKQD+Eeqg1AGV/0oFMNNcRI3o8
        88wzTZRigaB/XhSmDBgwoAwcOLBSJXyti8dRx2rks88+Ww2PQQyu50aSszzyyCPVgTfeeKO+x6G8UxK5
        EqrV/6NO9XjbbbeVRLtssMEGJdGekuhsm5zoMVcHRo4c2T2CQB233nprHYceeug/hZeXbb755p1+/fqV
        o446qvI7DpaJEydCvi761ltvVUMgGae7jXrssccK411zlAsMfPHFF+t748ePL3G6vsc5+cEpTgJIlBN9
        YjAtUrz7GWec8b8duO666+q4/vrrqxYbJC0KsHAS9o5QZuYqq6wy44ILLiihVDXWwricxKwLtsg99dRT
        RdIy8K677qqUYBxnkifVIYa5Zg45kWSvDnvPPRR75ZVXSmhc3+cERYtQTDzyyCN/lyRvjjvuuO7RRN4g
        3SQZa0Ey8vCCefHWddZZZ1YoM1WiSjoLWVAEGM7gUKSiiCIMZDwlCigVccbec8899ZxBzqHNKcZCvT33
        7pNPPlnnMz8nb7zxxpI8rPK78847/+mEE07oIS/bUY1XRRWm8K2J4ZL2xCRqWWONNb4NZShIXYSxUOPI
        vffe220w9B588MHq0MMPP1xuuummcsstt1TqQJWRnk/1rQZJ1ABVgmC54oorKr3MY34OO1pDhL0rwZOL
        JYB+F8AHXHXVVU3eq2MOB6Af2qyR5Pk+xlcUv/vuu0oPBiSxKz+THyU5Uw12jxRC8P7776/GQ5oj7osG
        xEePHl0dIACR4kIUFDp1QB3hFJAYzhmRBpZ5AXTllVdyQE6MuvTSS+dJa9IY3Q6cc845FGeR9dZb74W1
        1167xKFKG1wX/pY6JsPvNvSG+6LBcPeoiP/xnrOc4BjZRYeAVO97L5SohvXu3btE77tzBPptFNrc4nCe
        nZ7a0A991KhqfBDRGvwicnkBRNIi1Jej7ZUGUBZWi+J661BLEZMzViTcp1RoIfS33357dQylOJA1qqH4
        /e2339YBhKxfVlpppRoZ0QKWaEtoIiGKUZ0C3CT1ucccc0wTVWwq8ldffbXeo08KyNeRzZIKWL788ssa
        PsbSbYtAF5Va5Wgdwn8Gc4BTLfoGZxhkpCjJq+r0F198Ub766qu6zrRp08r06dMrUBRnww03rA77XzID
        SHJfcsklte1IY/hCakJPwtPoNyKh8yfDD4xkzlbScRD6aEIRhNEEFIRBHIAIZxjuunPPMx7qkeJKHw6K
        gHwSXck7ZcqU8uOPP5ZvvvmmfP3119WJH374oXQ6nXoPzbQpEpyzosAG85kjIE+InG5XcyBZPX/QXzyN
        1YlRoRmJSE0ehuOeF1vZY3xLKRNLVPzWnLnnec743/AM5CmPbnTVVVetzs2aNas68P3339cocIQD/nfd
        +WmnnVbRTsJWBqAURqSglbXWWuvH0OeUUHRB3P/HSOc/x7M7oWNB3BM2L3EARVo64SOUIc5ACctokXAN
        zRgZWtY50Mq5Sq77/Pzzz6uBKMNYEeCAXEClmTNnVuTT1KFKTfLLL7+8JjZ7qFHa9q7k6ehQdOkm1W2h
        JFWv9Ohva40Z0eqxF6AMXUfUgb5nGA5ZXOUAeWQ8yqAPyniP3NoT9OnTp4LQGu4Icc6Qauf+ovE1UigU
        atc1zWF9kSAMEj3S+0SeXbvJpmKBGL9J+p0f9PRQRhmGtlVUBGg8x1rUoaq9EDGI0Xg5YCHnnpHE0LN5
        2X///cvUqVMryjNmzKgOMN5w3TXGMT62VOM5DBTXUZJwWJ8DsfvF9EZLNEnceaM+w6hPakK3vkscSMsF
        hjhyjsFQx81sB6uxEOK0hTibfqpSynW0WXHFFSuVGG1wouW6I+M53Ldv30o1UQCcSJJea3GATYBURyKn
        s1LJV9ZP9Ew4Hk8C100FzusyW203EVRFxGSQQR1c5AyEGQ8d3IeYa96JSlRttyBVa+WS4c4NysOwNIxl
        ySWXLETEHOpClKYqGFDkJTqhqDoSqZ11xBFH9KH/y6ZRmiBsKWq147TRYLiJ2paBhEEe6vT4vPPOq7qe
        glIjps1wnwEQEw0N2LLLLlsdym5tDvq0/DdoP+PNhZpkNDpfjRd18wOIHf7nQJrM7/JMbzK6RRCaqcKF
        UyVbwcp9XBM2SDKGQ2ihxWC4SexjqYVFtQqiw0FOy49lllmm7pW14BKV4Rxo0Z89e3ZN/sUWW6xkG1lz
        6cQTT6wSSp6NVu3YIdKi4dnUralRqH42zTtHW6erkBa3mGQVKkbJCchyCv80Yoxfc801y9ChQxWV+pXB
        oio440VORNGCEaSyVR6IQ18tAEivXr3K4MGDa96EDd3Im4fhRlvRRYKE2+SkJfkmW85+zdlnnz04yTCD
        Uuj7GdzKKG/x3SSqs0jE4SqJNFquQCUNYHUqc1XdZoRr2ctWajEY4q3xXV1ddQ35QbrxXaOWTVRNdrnF
        CYnNSaNtUYDjnURgUtiznEJ2gMXJF27jmhyQtNDjPeNJmol471nJDlGDQm288cY1OlAkBqgFRYUJ+kbr
        iIjEgBpFUfbdCH0kKfGwrnetBzzXHIErF/VKKWQfZr3f6+j+EO8/ZhSvbdIlsgcVI4YraC33llhiiZor
        DMHrVsMpjjxCBw5QNa04tFtHRYBDeI9eEl6CW1ck8RzCDCfPchCVJS4KcZC0im66hmdShH9LRhcJAmOh
        QX/JHa6ZCPLCKHwSd+mll660UBEZBEktAHQ5ouL+V3ir8xxjsOGcZKKUKqs3kjOQZ7ghYTkjHwCITtBn
        vCN2sMNWN0AdkOfmac4999x/DQojswubRr60rxzAUR4b8iD9R/3UAWHo6F9QguGOjGQcB1Bi0qRJNUot
        8pLWvBLfRp3xagmD5RaDoUvRiIXIizogRQeIrps/dkyO8PSytUShxeLJVbk4RTOH85TICyaWzNARHdKI
        RukGa4WFSpuYHEGXFjlRcc+R8T7D0HnvSXIJiz6KH5UTafnQRhxttPCO1kcrwJDu1I0nU+QWiuQ2vkb0
        CRdviGEfScSWRhLGBBQBCjTevhVCJlL2bQPtklpDHdHKp8M2aRnv6JsSioleol7537YhjGuj0G4foe8I
        fYBwRORQPX3VSaFeE9FpmvB80Wj45uHt0/amElTL7AVhxD9FDD8tzBD1wjk0V1hhhXoNpVo6tcZzSLHC
        8+WXX7728r5Qe5fhkDecQ55MMhpVnDMegIDUxqgtUbepEYm+SeAmrUTThOtNEuOX8WrnhGe28k+ySKke
        xctCKgpQIrXqhQnb1kFdcE1CiwBHKJQ/77jPWe+qFa3CMA66cgxQrQKJPmnmFPrIQ/lngxPjx4YF/5D8
        aYwmBjZJTDv8f8lD7ypoOEq+REA0TGZy6tAih8OiJRkVorS3NWqQbyuvBkyl1mFCnnxKVFxHF3pPrQDG
        AVE2BxrJRc8Az6d4RS9CMjsA7J0cbTJ3HU0MbYJ+Exr5jD2KxjJGKKGBPhDghGsQYwBn5ATk1QD9vuhR
        L8ojaV2TK5LfM/IL2kDAcRHgBLr4H2hEgzKJENA8TzhWXnllOXBt5povRfS/HQiK9SOpY1RiV4kCMXxV
        1ISTUljEsDjUdJyMgiqOi4i2WUuAdpKb9GqJOY0+nmNYizh6AamlDeNFgdGOhEPr4qt47CKdywSwJu83
        cbiOJig0QaGOhO03QXWcjU1e6hI6H7cUNCGFmOFcFNBHd8pYzRyHkljdv7qgDRowvH1PgjJeNCANZcij
        jSNw0Ei7rmimyZwNmLQN1yT5e/iCiC3taEKNOsK1JkWsSYL1jwMvKTh2UvgtEnojYZZYEFUV5QiUJCZp
        1cjReuH2AUuyuu95hnOAoZxRxETDnCIiGqLLIQU1m6xO6Nfxe0SoODZ5+e+SNrVjjtGMHz++e6S7bLKQ
        z42/z3jey8stt1w1SkIKMXQkMUo45xiKyQehF3LPQ1BEOOx5XIcwY9HNPTSRV4xWX0QyTVpnyJAhXdlH
        dCmYqR3vxaFeQb9+Cw115xhNqNA9gkgtDpFVP3UumrDdYgNtr6AHoQhaDbkAReFmmARnGEQ51nIbfVCN
        5BID77c1RHQAwEGqJ+citV0BzlbRb2UatvdSbf9DfibKc3cgL84xFIgUJgndhBY9M+mwFJCpOk2qYkE5
        AU1GaQda3rpGJtHDc/5v6eM+pD3r6L4o+WwuIiIQCnZlbzJb8of3j2f93tqFOPjTDjD0z0derIMjicJ8
        Sab9E4mpfrOykZEXqqRIMBDSDG9RxntDVBguaT3nHoUSNU6iEYc8qwWXQ9rwdKv3pyYtEjo2ufa3OZCJ
        /UK4YJzYMYk1SWhVRYnLKBxuGz4GoQaD/c8B6DMavSS9Vtx7KEiFqBidN+egQYM+TvJflnV7ZuNUbfi7
        OJAo1J85s9taKz3TiNDpSwXPhp1iQJEjjMqktbgxnMEcESkJ27YQfplBR0aHntNCl2eyzknJu0F5f4HM
        WX+XFgG/icmBtCxVdTjxP8df5QA+hj6/zvkqWXyM1laD5fcEdQCaIiMp1QAj85XkVaWIdl0/L5/69+8/
        K3R8MEk7OALRN/n36+TELxIVUl5FxdGIiv3k+NkOJNkqGkFw/hS4hbLY7/LMReHsEzHEL/e1gGlDQoX6
        pYIMclLecDSjK7n0WRy+Ic4NjKMLx+F5Yvw82aHZXNWfe6lhe/xL469yQASSsH6W7ZGk/WUkccE8t0gc
        Wz4G7BTFGpLnh8XIe9Kaj0sdmRDKPZI24MKc75UI9Eu/9W9BfH78BYjKyvg/d+DnjRHNfwLq/8axO+fx
        YAAAAABJRU5ErkJggg==
</value>
  </data>
</root>